'use client';

import { useState, useEffect } from 'react';
import { CustomWheel } from '@/components/CustomWheel';

export default function FinalErrorTestPage() {
  const [logs, setLogs] = useState<string[]>([]);
  const [mustSpin, setMustSpin] = useState(false);
  const [prizeNumber, setPrizeNumber] = useState(0);
  const [errorCount, setErrorCount] = useState(0);

  // –ü—Ä–æ–±–ª–µ–º–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –æ—à–∏–±–∫–∏
  const problemImageUrl = 'https://s3.twcstorage.ru/617774af-gifty/wheel-images/1750680655099-pk24bh.png';

  // –î–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
  const wheelData = [
    { option: '–ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Å–µ–≥–º–µ–Ω—Ç', style: { backgroundColor: '#ff6b6b', textColor: '#ffffff' }, image: problemImageUrl },
    { option: '–°–µ–≥–º–µ–Ω—Ç 2', style: { backgroundColor: '#4ecdc4', textColor: '#ffffff' } },
    { option: '–°–µ–≥–º–µ–Ω—Ç 3', style: { backgroundColor: '#45b7d1', textColor: '#ffffff' } },
    { option: '–°–µ–≥–º–µ–Ω—Ç 4', style: { backgroundColor: '#96ceb4', textColor: '#ffffff' } },
  ];

  const addLog = (message: string) => {
    const timestamp = new Date().toLocaleTimeString();
    const logMessage = `[${timestamp}] ${message}`;
    setLogs(prev => [...prev, logMessage]);
  };

  const clearLogs = () => {
    setLogs([]);
    setErrorCount(0);
  };

  const handleSpin = () => {
    if (!mustSpin) {
      const newPrizeNumber = Math.floor(Math.random() * wheelData.length);
      setPrizeNumber(newPrizeNumber);
      setMustSpin(true);
      addLog(`üé≤ –ó–∞–ø—É—Å–∫ —Ä—É–ª–µ—Ç–∫–∏, –≤—ã–±—Ä–∞–Ω —Å–µ–≥–º–µ–Ω—Ç: ${newPrizeNumber}`);
    }
  };

  const handleStopSpinning = () => {
    setMustSpin(false);
    addLog(`üéâ –†—É–ª–µ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å –Ω–∞: ${wheelData[prizeNumber]?.option}`);
  };

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏
  useEffect(() => {
    const originalError = console.error;
    console.error = (...args) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –æ—à–∏–±–∫–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const errorMessage = args.join(' ');
      if (errorMessage.includes('s3.twcstorage.ru') || errorMessage.includes('img.src') || errorMessage.includes('URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')) {
        setErrorCount(prev => prev + 1);
        addLog(`‚ùå –û–®–ò–ë–ö–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê: ${errorMessage}`);
      }
      originalError.apply(console, args);
    };

    return () => {
      console.error = originalError;
    };
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    addLog('üîç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—à–∏–±–æ–∫...');
    addLog(`üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${problemImageUrl}`);
    addLog('üìä –°–ª–µ–¥–∏–º –∑–∞ –æ—à–∏–±–∫–∞–º–∏ –∫–æ–Ω—Å–æ–ª–∏...');
  }, []);

  return (
    <div className="container mx-auto p-8 max-w-6xl">
      <h1 className="text-3xl font-bold mb-8 text-center">–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏</h1>
      
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ä—É–ª–µ—Ç–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="space-y-6">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–¢–µ—Å—Ç —Ä—É–ª–µ—Ç–∫–∏</h2>
            
            <div className="flex flex-col items-center space-y-4">
              <CustomWheel
                mustStartSpinning={mustSpin}
                prizeNumber={prizeNumber}
                data={wheelData}
                onStopSpinning={handleStopSpinning}
                size="medium"
              />
              
              <button
                onClick={handleSpin}
                disabled={mustSpin}
                className={`px-6 py-3 rounded-lg font-semibold ${
                  mustSpin 
                    ? 'bg-gray-400 text-gray-600 cursor-not-allowed' 
                    : 'bg-blue-500 text-white hover:bg-blue-600'
                }`}
              >
                {mustSpin ? '–ö—Ä—É—Ç–∏—Ç—Å—è...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É'}
              </button>
            </div>
          </div>

          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–°—Ç–∞—Ç—É—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
            
            <div className="space-y-3">
              <div className={`p-4 rounded-lg ${errorCount === 0 ? 'bg-green-100 border border-green-300' : 'bg-red-100 border border-red-300'}`}>
                <div className={`text-lg font-semibold ${errorCount === 0 ? 'text-green-800' : 'text-red-800'}`}>
                  {errorCount === 0 ? '‚úÖ –û—à–∏–±–∫–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã!' : `‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—à–∏–±–æ–∫: ${errorCount}`}
                </div>
                <div className={`text-sm ${errorCount === 0 ? 'text-green-600' : 'text-red-600'}`}>
                  {errorCount === 0 
                    ? '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ' 
                    : '–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'
                  }
                </div>
              </div>
              
              <button
                onClick={clearLogs}
                className="w-full bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600"
              >
                –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ –∏ —Å—á—ë—Ç—á–∏–∫
              </button>
            </div>
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ª–æ–≥–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="space-y-6">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–õ–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞</h2>
            
            <div className="h-64 overflow-y-auto bg-gray-50 p-4 rounded border text-xs font-mono">
              {logs.length === 0 ? (
                <div className="text-gray-500">–õ–æ–≥–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å...</div>
              ) : (
                logs.map((log, index) => (
                  <div key={index} className={`mb-1 ${log.includes('‚ùå') ? 'text-red-600 font-bold' : ''}`}>
                    {log}
                  </div>
                ))
              )}
            </div>
          </div>

          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
            <h2 className="text-xl font-semibold mb-4 text-blue-800">–ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ</h2>
            <div className="space-y-2 text-sm text-blue-700">
              <div><strong>üîß –ü—Ä–æ–±–ª–µ–º–∞:</strong> console.error() —Å URL –≤—ã–∑—ã–≤–∞–ª –æ—à–∏–±–∫—É Next.js</div>
              <div><strong>‚úÖ –†–µ—à–µ–Ω–∏–µ:</strong> –ó–∞–º–µ–Ω–∏–ª–∏ console.error –Ω–∞ console.log –¥–ª—è URL</div>
              <div><strong>üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π URL:</strong> s3.twcstorage.ru/617774af-gifty/wheel-images/1750680655099-pk24bh.png</div>
              <div><strong>üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:</strong> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏</div>
            </div>
          </div>

          <div className="bg-green-50 border border-green-200 rounded-lg p-6">
            <h2 className="text-xl font-semibold mb-4 text-green-800">–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h2>
            <div className="space-y-2 text-sm text-green-700">
              <div><strong>‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫:</strong> "Error: img.src" –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è</div>
              <div><strong>‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫:</strong> "Error: URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è" –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è</div>
              <div><strong>‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç:</strong> –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ /api/proxy-image</div>
              <div><strong>‚úÖ –†—É–ª–µ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:</strong> –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 