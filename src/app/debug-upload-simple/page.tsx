'use client';

import { useState } from 'react';

export default function DebugUploadSimplePage() {
  const [status, setStatus] = useState('');
  const [result, setResult] = useState<any>(null);

  const testUpload = async () => {
    try {
      setStatus('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∫—Ä–∞—Å–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç 50x50)
      const canvas = document.createElement('canvas');
      canvas.width = 50;
      canvas.height = 50;
      const ctx = canvas.getContext('2d');
      
      if (ctx) {
        ctx.fillStyle = '#ff0000';
        ctx.fillRect(0, 0, 50, 50);
      }

      setStatus('–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ blob...');
      
      canvas.toBlob(async (blob) => {
        if (!blob) {
          setStatus('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å blob');
          return;
        }

        setStatus('–°–æ–∑–¥–∞–µ–º FormData...');
        const formData = new FormData();
        formData.append('image', blob, 'test.png');

        setStatus('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/upload-image');
        
        try {
          const response = await fetch('/api/upload-image', {
            method: 'POST',
            body: formData,
          });

          console.log('üì® –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
          console.log('üì® Headers:', Object.fromEntries(response.headers.entries()));

          const result = await response.json();
          console.log('üì• –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);

          setResult(result);

          if (response.ok) {
            setStatus(`‚úÖ –£—Å–ø–µ—à–Ω–æ! URL: ${result.url}`);
          } else {
            setStatus(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
          }
        } catch (fetchError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ fetch:', fetchError);
          setStatus(`‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ${fetchError instanceof Error ? fetchError.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        }
      }, 'image/png');
    } catch (error) {
      console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
      setStatus(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  const testFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    try {
      setStatus('–ó–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª...');
      
      const formData = new FormData();
      formData.append('image', file);

      console.log('üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª:', file.name, file.type, file.size);
      
      const response = await fetch('/api/upload-image', {
        method: 'POST',
        body: formData,
      });

      console.log('üì® –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      const result = await response.json();
      console.log('üì• –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);

      setResult(result);

      if (response.ok) {
        setStatus(`‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω! URL: ${result.url}`);
      } else {
        setStatus(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${result.error}`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
      setStatus(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  return (
    <div className="container mx-auto p-8 max-w-4xl">
      <h1 className="text-3xl font-bold mb-8">–ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h1>
      
      <div className="space-y-6">
        {/* –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h2>
          <button
            onClick={testUpload}
            className="w-full bg-blue-500 text-white py-3 px-4 rounded-lg hover:bg-blue-600 mb-4"
          >
            –°–æ–∑–¥–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
          </button>
        </div>

        {/* –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–¢–µ—Å—Ç 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞</h2>
          <input
            type="file"
            accept="image/*"
            onChange={testFileUpload}
            className="w-full p-2 border border-gray-300 rounded"
          />
        </div>

        {/* –°—Ç–∞—Ç—É—Å */}
        {status && (
          <div className="bg-gray-100 rounded-lg p-4">
            <h3 className="font-semibold mb-2">–°—Ç–∞—Ç—É—Å:</h3>
            <p className="text-sm">{status}</p>
          </div>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
        {result && (
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h3 className="font-semibold mb-4">–†–µ–∑—É–ª—å—Ç–∞—Ç API:</h3>
            <pre className="bg-gray-100 p-4 rounded text-sm overflow-auto">
              {JSON.stringify(result, null, 2)}
            </pre>
            
            {result.url && (
              <div className="mt-4">
                <h4 className="font-semibold mb-2">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</h4>
                <img 
                  src={result.url} 
                  alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" 
                  className="max-w-xs border rounded"
                  onLoad={() => console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ')}
                  onError={(e) => console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', e)}
                />
                <p className="text-xs text-gray-600 mt-2 break-all">
                  <a href={result.url} target="_blank" rel="noopener noreferrer" className="text-blue-500 hover:underline">
                    {result.url}
                  </a>
                </p>
              </div>
            )}
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
          <h3 className="font-semibold mb-2 text-yellow-800">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
          <ol className="list-decimal list-inside space-y-1 text-sm text-yellow-700">
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)</li>
            <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–∞ —Ç–µ—Å—Ç–∞</li>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏</li>
            <li>–ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏—Ö</li>
          </ol>
        </div>
      </div>
    </div>
  );
} 