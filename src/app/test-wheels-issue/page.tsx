'use client';

import { useState, useEffect } from 'react';
import { useWheels, useCreateWheel } from '@/lib/graphql/hooks';
import { apolloClient } from '@/lib/graphql/client';
import { gql } from '@apollo/client';

export default function TestWheelsIssuePage() {
  const { data: wheelsData, loading: wheelsLoading, error: wheelsError, refetch } = useWheels();
  const [createWheel, { loading: creating }] = useCreateWheel();
  const [sessionInfo, setSessionInfo] = useState<any>({});
  const [rawData, setRawData] = useState<any>(null);
  const [step, setStep] = useState(1);

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
    if (typeof window !== 'undefined') {
      const sessionId = localStorage.getItem('fortuna_session_id');
      const authToken = localStorage.getItem('auth_token');
      setSessionInfo({
        sessionId,
        authToken,
        hasSession: !!sessionId,
        hasAuth: !!authToken
      });
    }
  }, []);

  // –®–∞–≥ 1: –°–æ–∑–¥–∞—Ç—å —Ä—É–ª–µ—Ç–∫—É
  const handleCreateWheel = async () => {
    console.log('üé° –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–ª–µ—Ç–∫–∏');
    try {
      const result = await createWheel({
        variables: {
          input: {
            title: `–¢–µ—Å—Ç–æ–≤–∞—è —Ä—É–ª–µ—Ç–∫–∞ ${Date.now()}`,
            segments: [
              { option: '–ü—Ä–∏–∑ 1', style: { backgroundColor: '#EC4899', textColor: 'white' } },
              { option: '–ü—Ä–∏–∑ 2', style: { backgroundColor: '#3B82F6', textColor: 'white' } }
            ],
            isPublic: false
          }
        }
      });
      
      console.log('‚úÖ –†—É–ª–µ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', result);
      setStep(2);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è:', error);
    }
  };

  // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å
  const handleDirectQuery = async () => {
    console.log('üîç –®–∞–≥ 2: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ GraphQL');
    try {
      const result = await apolloClient.query({
        query: gql`
          query GetWheelsDirectly {
            wheels {
              id
              title
              createdAt
              user {
                id
                name
                email
              }
            }
          }
        `,
        fetchPolicy: 'network-only'
      });
      
      console.log('‚úÖ –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω:', result);
      setRawData(result.data);
      setStep(3);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', error);
    }
  };

  // –®–∞–≥ 3: –û–±–Ω–æ–≤–∏—Ç—å —Ö—É–∫
  const handleRefreshHook = () => {
    console.log('üîÑ –®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö—É–∫–∞ useWheels');
    refetch();
    setStep(4);
  };

  return (
    <div className="p-8 max-w-4xl mx-auto">
      <h1 className="text-3xl font-bold mb-6">–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä—É–ª–µ—Ç–∫–∞–º–∏</h1>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ */}
      <div className="bg-blue-50 p-4 rounded-lg mb-6">
        <h2 className="text-xl font-semibold mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏</h2>
        <div className="text-sm space-y-1">
          <p><strong>Session ID:</strong> <code>{sessionInfo.sessionId || '–ù–µ—Ç'}</code></p>
          <p><strong>Auth Token:</strong> <code>{sessionInfo.authToken ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}</code></p>
          <p><strong>–¢–∏–ø —Ç–æ–∫–µ–Ω–∞:</strong> {sessionInfo.authToken?.startsWith('temp_') ? '–í—Ä–µ–º–µ–Ω–Ω—ã–π' : '–†–µ–∞–ª—å–Ω—ã–π'}</p>
        </div>
      </div>

      {/* –ü–æ—à–∞–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ */}
      <div className="space-y-6">
        {/* –®–∞–≥ 1 */}
        <div className={`border rounded-lg p-4 ${step >= 1 ? 'bg-white' : 'bg-gray-100'}`}>
          <h3 className="text-lg font-semibold mb-2">–®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–ª–µ—Ç–∫–∏</h3>
          <button
            onClick={handleCreateWheel}
            disabled={creating || step > 1}
            className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:opacity-50"
          >
            {creating ? '–°–æ–∑–¥–∞–µ—Ç—Å—è...' : step > 1 ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–°–æ–∑–¥–∞—Ç—å —Ä—É–ª–µ—Ç–∫—É'}
          </button>
        </div>

        {/* –®–∞–≥ 2 */}
        <div className={`border rounded-lg p-4 ${step >= 2 ? 'bg-white' : 'bg-gray-100'}`}>
          <h3 className="text-lg font-semibold mb-2">–®–∞–≥ 2: –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ GraphQL</h3>
          <button
            onClick={handleDirectQuery}
            disabled={step < 2 || step > 2}
            className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:opacity-50"
          >
            {step > 2 ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å'}
          </button>
          
          {rawData && (
            <div className="mt-4 bg-gray-100 p-3 rounded">
              <p><strong>–ù–∞–π–¥–µ–Ω–æ —Ä—É–ª–µ—Ç–æ–∫:</strong> {rawData.wheels?.length || 0}</p>
              {rawData.wheels?.map((wheel: any) => (
                <div key={wheel.id} className="text-sm mt-2">
                  <p>‚Ä¢ {wheel.title} (ID: {wheel.id})</p>
                  <p className="text-gray-600 ml-4">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {wheel.user.email}</p>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –®–∞–≥ 3 */}
        <div className={`border rounded-lg p-4 ${step >= 3 ? 'bg-white' : 'bg-gray-100'}`}>
          <h3 className="text-lg font-semibold mb-2">–®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö—É–∫–∞ useWheels</h3>
          <button
            onClick={handleRefreshHook}
            disabled={step < 3 || step > 3}
            className="bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600 disabled:opacity-50"
          >
            {step > 3 ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–û–±–Ω–æ–≤–∏—Ç—å —Ö—É–∫'}
          </button>
        </div>

        {/* –®–∞–≥ 4 - –†–µ–∑—É–ª—å—Ç–∞—Ç */}
        <div className={`border rounded-lg p-4 ${step >= 4 ? 'bg-white' : 'bg-gray-100'}`}>
          <h3 className="text-lg font-semibold mb-2">–®–∞–≥ 4: –†–µ–∑—É–ª—å—Ç–∞—Ç —Ö—É–∫–∞ useWheels</h3>
          
          {wheelsLoading && <p className="text-blue-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
          
          {wheelsError && (
            <div className="bg-red-100 p-3 rounded mb-4">
              <p className="text-red-800"><strong>–û—à–∏–±–∫–∞:</strong> {wheelsError.message}</p>
            </div>
          )}
          
          <div className="bg-gray-100 p-3 rounded">
            <p><strong>–°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏:</strong> {wheelsLoading ? '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è' : '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'}</p>
            <p><strong>–ù–∞–π–¥–µ–Ω–æ —Ä—É–ª–µ—Ç–æ–∫ —á–µ—Ä–µ–∑ —Ö—É–∫:</strong> {wheelsData?.wheels?.length || 0}</p>
            
            {wheelsData?.wheels && wheelsData.wheels.length > 0 && (
              <div className="mt-2">
                <p><strong>–†—É–ª–µ—Ç–∫–∏:</strong></p>
                {wheelsData.wheels.map((wheel: any) => (
                  <div key={wheel.id} className="text-sm mt-1">
                    <p>‚Ä¢ {wheel.title} (ID: {wheel.id})</p>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>

      {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      {step >= 4 && (
        <div className="mt-6 bg-yellow-50 p-4 rounded-lg">
          <h3 className="text-lg font-semibold mb-2">–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <p><strong>–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å:</strong></p>
              <p>{rawData?.wheels?.length || 0} —Ä—É–ª–µ—Ç–æ–∫</p>
            </div>
            <div>
              <p><strong>–•—É–∫ useWheels:</strong></p>
              <p>{wheelsData?.wheels?.length || 0} —Ä—É–ª–µ—Ç–æ–∫</p>
            </div>
          </div>
          
          {(rawData?.wheels?.length || 0) !== (wheelsData?.wheels?.length || 0) && (
            <div className="mt-4 bg-red-100 p-3 rounded">
              <p className="text-red-800 font-semibold">‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê –ù–ê–ô–î–ï–ù–ê!</p>
              <p className="text-red-700">–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∏ —Ö—É–∫ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–ª–µ—Ç–æ–∫.</p>
              <p className="text-red-700">–≠—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</p>
            </div>
          )}
        </div>
      )}
    </div>
  );
} 