'use client';

import { useState } from 'react';

export default function TestUploadQuickPage() {
  const [result, setResult] = useState<string>('');

  const quickTest = async () => {
    try {
      setResult('–¢–µ—Å—Ç–∏—Ä—É–µ–º...');
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const canvas = document.createElement('canvas');
      canvas.width = 100;
      canvas.height = 100;
      const ctx = canvas.getContext('2d');
      
      if (ctx) {
        // –ö—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω
        ctx.fillStyle = '#ff0000';
        ctx.fillRect(0, 0, 100, 100);
        
        // –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç
        ctx.fillStyle = '#ffffff';
        ctx.font = 'bold 20px Arial';
        ctx.textAlign = 'center';
        ctx.fillText('TEST', 50, 60);
      }

      canvas.toBlob(async (blob) => {
        if (!blob) {
          setResult('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è blob');
          return;
        }

        const formData = new FormData();
        formData.append('image', blob, 'test.png');

        const response = await fetch('/api/upload-image', {
          method: 'POST',
          body: formData,
        });

        const data = await response.json();

        if (response.ok) {
          setResult(`‚úÖ –£—Å–ø–µ—à–Ω–æ! URL: ${data.url}`);
          console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', data);
        } else {
          setResult(`‚ùå –û—à–∏–±–∫–∞: ${data.error}`);
          console.error('–û—à–∏–±–∫–∞:', data);
        }
      }, 'image/png');
    } catch (error) {
      setResult(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      console.error('–ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
    }
  };

  return (
    <div className="container mx-auto p-8 max-w-2xl">
      <h1 className="text-3xl font-bold mb-8">–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏</h1>
      
      <div className="space-y-4">
        <button
          onClick={quickTest}
          className="w-full bg-blue-500 text-white py-4 px-6 rounded-lg hover:bg-blue-600 text-lg"
        >
          üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        </button>
        
        {result && (
          <div className="p-4 bg-gray-100 rounded-lg">
            <p className="text-sm font-mono">{result}</p>
          </div>
        )}
        
        <div className="text-sm text-gray-600">
          <p>–≠—Ç–æ—Ç —Ç–µ—Å—Ç:</p>
          <ul className="list-disc list-inside ml-4">
            <li>–°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 100x100 —Å —Ç–µ–∫—Å—Ç–æ–º "TEST"</li>
            <li>–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –Ω–∞ /api/upload-image</li>
            <li>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç</li>
          </ul>
        </div>
      </div>
    </div>
  );
} 