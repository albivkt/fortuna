'use client';

import { useMe } from '@/lib/graphql/hooks';
import { getCurrentUser } from '@/lib/user';
import { useState, useEffect } from 'react';

export default function TestUserStatusPage() {
  const { data: meData, loading: meLoading, error: meError, refetch } = useMe();
  const [localUser, setLocalUser] = useState<any>(null);

  useEffect(() => {
    const user = getCurrentUser();
    setLocalUser(user);
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-pink-900 p-8">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold text-white mb-8">–¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>
        
        <div className="grid md:grid-cols-2 gap-8">
          {/* GraphQL –¥–∞–Ω–Ω—ã–µ */}
          <div className="bg-gray-800/60 backdrop-blur-sm p-6 rounded-xl border border-gray-700/50">
            <h2 className="text-xl font-semibold text-white mb-4">GraphQL –¥–∞–Ω–Ω—ã–µ (useMe)</h2>
            
            {meLoading && (
              <div className="text-yellow-400">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            )}
            
            {meError && (
              <div className="text-red-400 mb-4">
                –û—à–∏–±–∫–∞: {meError.message}
              </div>
            )}
            
            {meData?.me ? (
              <div className="space-y-2 text-sm">
                <div className="text-green-400 font-semibold">‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</div>
                <div className="text-gray-300">ID: {meData.me.id}</div>
                <div className="text-gray-300">–ò–º—è: {meData.me.name}</div>
                <div className="text-gray-300">Email: {meData.me.email}</div>
                <div className="text-gray-300">
                  –ü–ª–∞–Ω: <span className={`font-semibold ${meData.me.plan === 'pro' ? 'text-yellow-400' : 'text-blue-400'}`}>
                    {meData.me.plan?.toUpperCase() || 'FREE'}
                  </span>
                </div>
              </div>
            ) : (
              <div className="text-red-400">‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</div>
            )}
            
            <button
              onClick={() => refetch()}
              className="mt-4 bg-blue-500/20 text-blue-400 border border-blue-400/30 px-4 py-2 rounded-lg hover:bg-blue-500/30 transition-all"
            >
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            </button>
          </div>

          {/* localStorage –¥–∞–Ω–Ω—ã–µ */}
          <div className="bg-gray-800/60 backdrop-blur-sm p-6 rounded-xl border border-gray-700/50">
            <h2 className="text-xl font-semibold text-white mb-4">localStorage –¥–∞–Ω–Ω—ã–µ</h2>
            
            {localUser ? (
              <div className="space-y-2 text-sm">
                <div className="text-green-400 font-semibold">‚úÖ –î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã</div>
                <div className="text-gray-300">–ò–º—è: {localUser.name}</div>
                <div className="text-gray-300">Email: {localUser.email}</div>
                <div className="text-gray-300">ID: {localUser.id}</div>
              </div>
            ) : (
              <div className="text-red-400">‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>
            )}
            
            <button
              onClick={() => {
                const user = getCurrentUser();
                setLocalUser(user);
              }}
              className="mt-4 bg-green-500/20 text-green-400 border border-green-400/30 px-4 py-2 rounded-lg hover:bg-green-500/30 transition-all"
            >
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å localStorage
            </button>
          </div>
        </div>

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <div className="mt-8 bg-gray-800/60 backdrop-blur-sm p-6 rounded-xl border border-gray-700/50">
          <h2 className="text-xl font-semibold text-white mb-4">–î–µ–π—Å—Ç–≤–∏—è</h2>
          
          <div className="space-y-4">
            <div className="text-gray-300 text-sm">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤:
            </div>
            
            <div className="flex flex-wrap gap-4">
              <a
                href="/dashboard"
                className="bg-blue-500/20 text-blue-400 border border-blue-400/30 px-4 py-2 rounded-lg hover:bg-blue-500/30 transition-all"
              >
                üìä –î–∞—à–±–æ—Ä–¥
              </a>
              
              <a
                href="/dashboard/subscription"
                className="bg-yellow-500/20 text-yellow-400 border border-yellow-400/30 px-4 py-2 rounded-lg hover:bg-yellow-500/30 transition-all"
              >
                üí≥ –ü–æ–¥–ø–∏—Å–∫–∞
              </a>
              
              <a
                href="/login"
                className="bg-green-500/20 text-green-400 border border-green-400/30 px-4 py-2 rounded-lg hover:bg-green-500/30 transition-all"
              >
                üîë –õ–æ–≥–∏–Ω
              </a>
              
              <a
                href="/register"
                className="bg-purple-500/20 text-purple-400 border border-purple-400/30 px-4 py-2 rounded-lg hover:bg-purple-500/30 transition-all"
              >
                üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </a>
            </div>
          </div>
        </div>

        {/* Raw –¥–∞–Ω–Ω—ã–µ */}
        <div className="mt-8 bg-gray-800/60 backdrop-blur-sm p-6 rounded-xl border border-gray-700/50">
          <h2 className="text-xl font-semibold text-white mb-4">Raw –¥–∞–Ω–Ω—ã–µ</h2>
          
          <div className="space-y-4">
            <div>
              <h3 className="text-lg font-medium text-gray-300 mb-2">meData:</h3>
              <pre className="bg-gray-900/50 p-4 rounded-lg text-xs text-gray-300 overflow-auto">
                {JSON.stringify(meData, null, 2)}
              </pre>
            </div>
            
            <div>
              <h3 className="text-lg font-medium text-gray-300 mb-2">localUser:</h3>
              <pre className="bg-gray-900/50 p-4 rounded-lg text-xs text-gray-300 overflow-auto">
                {JSON.stringify(localUser, null, 2)}
              </pre>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 