'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import { useMutation, useQuery, useApolloClient } from '@apollo/client';
import { gql } from '@apollo/client';
import { useMe } from '@/lib/graphql/hooks';
import { updateUser } from '@/lib/user';

// GraphQL –∑–∞–ø—Ä–æ—Å—ã –∏ –º—É—Ç–∞—Ü–∏–∏
const GET_PLAN_LIMITS = gql`
  query GetPlanLimits {
    planLimits {
      maxWheels
      maxSegments
      allowImages
      allowWeights
      allowCustomDesign
      allowStatistics
    }
    me {
      id
      email
      name
      plan
      planExpiresAt
    }
  }
`;

const UPGRADE_TO_PRO = gql`
  mutation UpgradeToPro($period: String!) {
    upgradeToPro(period: $period) {
      id
      plan
      status
      amount
      period
      startDate
      endDate
    }
  }
`;

interface User {
  id: string;
  name?: string;
  email: string;
  plan: 'free' | 'pro';
}

export default function SubscriptionPage() {
  const [user, setUser] = useState<User | null>(null);
  const [selectedPlan, setSelectedPlan] = useState<'MONTHLY' | 'YEARLY'>('MONTHLY');
  const [isProcessing, setIsProcessing] = useState(false);
  const router = useRouter();
  const client = useApolloClient();

  // GraphQL –∑–∞–ø—Ä–æ—Å—ã
  const { data: meData, loading: meLoading } = useMe();
  const { data: planData, loading: planLoading, refetch } = useQuery(GET_PLAN_LIMITS, {
    errorPolicy: 'ignore'
  });
  
  const [upgradeToPro] = useMutation(UPGRADE_TO_PRO, {
    onCompleted: (data) => {
      console.log('‚úÖ PRO upgrade completed:', data);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (user) {
        const updatedUser: User = { 
          ...user, 
          plan: 'pro' as const 
        };
        setUser(updatedUser);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        updateUser({ plan: 'pro' });
      }
      
      // –û—á–∏—â–∞–µ–º –≤–µ—Å—å –∫—ç—à Apollo –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      client.resetStore().then(() => {
        console.log('üîÑ Apollo cache reset after PRO upgrade');
      });
      
      alert('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –¥–æ PRO –ø–ª–∞–Ω–∞!');
      router.push('/dashboard');
    },
    onError: (error) => {
      console.error('‚ùå Error upgrading to PRO:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–æ PRO: ' + error.message);
    }
  });

  useEffect(() => {
    if (meData?.me) {
      const authenticatedUser = meData.me;
      const userPlan = authenticatedUser.plan?.toLowerCase() || 'free';
      
      setUser({
        id: authenticatedUser.id,
        name: authenticatedUser.name,
        email: authenticatedUser.email,
        plan: userPlan as 'free' | 'pro'
      });
    } else if (!meLoading && !meData?.me) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω
      router.push('/login');
    }
  }, [meData, meLoading, router]);

  const handleUpgradeToPro = (period: 'MONTHLY' | 'YEARLY') => {
    if (!user) return;
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º
    router.push(`/payment?period=${period}`);
  };

  const handleDowngradeToFree = () => {
    if (!user) return;

    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω? –í—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ PRO —Ñ—É–Ω–∫—Ü–∏—è–º.')) {
      const updatedUser: User = { ...user, plan: 'free' as const };
      setUser(updatedUser);
      alert('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω.');
    }
  };

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <Link href="/" className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                <span className="text-white font-bold text-sm">G</span>
              </div>
              <span className="text-2xl font-bold text-gray-900">GIFTY</span>
            </Link>
            <div className="flex items-center space-x-4">
              <Link href="/dashboard" className="text-gray-600 hover:text-gray-900">
                ‚Üê –ù–∞–∑–∞–¥ –∫ –¥–∞—à–±–æ—Ä–¥—É
              </Link>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* Current Plan Status */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</h1>
          <div className="inline-flex items-center px-6 py-3 rounded-full bg-white shadow-sm">
            <div className={`w-3 h-3 rounded-full mr-3 ${user.plan === 'pro' ? 'bg-purple-500' : 'bg-gray-400'}`}></div>
            <div className="text-center">
              <span className="text-lg font-medium text-gray-900">
                –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω: {user.plan === 'pro' ? 'PRO' : '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π'}
              </span>
              {user.plan === 'pro' && planData?.me?.planExpiresAt && (
                <div className="text-sm text-gray-600 mt-1">
                  –¥–æ {new Date(planData.me.planExpiresAt).toLocaleDateString('ru-RU')}
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Pricing Plans */}
        <div className="grid md:grid-cols-3 gap-8 mb-12">
          {/* Free Plan */}
          <div className={`bg-white rounded-2xl shadow-lg p-8 border-2 ${user.plan === 'free' ? 'border-blue-500' : 'border-gray-200'}`}>
            <div className="text-center mb-6">
              <h3 className="text-2xl font-bold text-gray-900 mb-2">–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π</h3>
              <div className="text-4xl font-bold text-gray-900 mb-2">0‚ÇΩ</div>
              <p className="text-gray-600">–Ω–∞–≤—Å–µ–≥–¥–∞</p>
            </div>
            
            <ul className="space-y-4 mb-8">
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–î–æ 3 —Ä—É–ª–µ—Ç–æ–∫</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–î–æ 6 —Å–µ–≥–º–µ–Ω—Ç–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-red-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
                <span className="text-gray-500">–ë–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏–∑–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-red-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
                <span className="text-gray-500">–ë–µ–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</span>
              </li>
            </ul>

            {user.plan === 'free' ? (
              <div className="text-center">
                <div className="bg-blue-100 text-blue-700 px-6 py-3 rounded-lg font-medium">
                  –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                </div>
              </div>
            ) : (
              <button
                onClick={handleDowngradeToFree}
                className="w-full bg-gray-200 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-300 transition-colors font-medium"
              >
                –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π
              </button>
            )}
          </div>

          {/* PRO Monthly Plan */}
          <div className={`bg-white rounded-2xl shadow-lg p-8 border-2 relative ${user.plan === 'pro' ? 'border-purple-500' : 'border-gray-200'}`}>
            {user.plan !== 'pro' && (
              <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                <span className="bg-purple-500 text-white px-4 py-2 rounded-full text-sm font-medium">
                  –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                </span>
              </div>
            )}
            
            <div className="text-center mb-6">
              <h3 className="text-2xl font-bold text-gray-900 mb-2">PRO –ú–µ—Å—è—á–Ω—ã–π</h3>
              <div className="text-4xl font-bold text-purple-600 mb-2">400‚ÇΩ</div>
              <p className="text-gray-600">–≤ –º–µ—Å—è—Ü</p>
            </div>
            
            <ul className="space-y-4 mb-8">
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä—É–ª–µ—Ç–æ–∫</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–î–æ 20 —Å–µ–≥–º–µ–Ω—Ç–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–∑–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Å–∞ –ø—Ä–∏–∑–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π</span>
              </li>
            </ul>

            {user.plan === 'pro' ? (
              <div className="text-center">
                <div className="bg-purple-100 text-purple-700 px-6 py-3 rounded-lg font-medium">
                  –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                </div>
              </div>
            ) : (
              <button
                onClick={() => handleUpgradeToPro('MONTHLY')}
                className="w-full bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium"
              >
                –û–±–Ω–æ–≤–∏—Ç—å –¥–æ PRO - 400‚ÇΩ/–º–µ—Å
              </button>
            )}
          </div>

          {/* PRO Yearly Plan */}
          <div className={`bg-white rounded-2xl shadow-lg p-8 border-2 relative ${user.plan === 'pro' ? 'border-purple-500' : 'border-gray-200'}`}>
            {user.plan !== 'pro' && (
              <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                <span className="bg-green-500 text-white px-4 py-2 rounded-full text-sm font-medium">
                  –í—ã–≥–æ–¥–Ω–æ
                </span>
              </div>
            )}
            
            <div className="text-center mb-6">
              <h3 className="text-2xl font-bold text-gray-900 mb-2">PRO –ì–æ–¥–æ–≤–æ–π</h3>
              <div className="text-4xl font-bold text-purple-600 mb-2">4000‚ÇΩ</div>
              <p className="text-gray-600">–≤ –≥–æ–¥</p>
              <p className="text-sm text-green-600 font-medium mt-1">
                –≠–∫–æ–Ω–æ–º–∏—è 17% (333‚ÇΩ/–º–µ—Å)
              </p>
            </div>
            
            <ul className="space-y-4 mb-8">
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä—É–ª–µ—Ç–æ–∫</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–î–æ 20 —Å–µ–≥–º–µ–Ω—Ç–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–∑–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Å–∞ –ø—Ä–∏–∑–æ–≤</span>
              </li>
              <li className="flex items-center">
                <svg className="w-5 h-5 text-green-500 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
                <span className="text-gray-700">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π</span>
              </li>
            </ul>

            {user.plan === 'pro' ? (
              <div className="text-center">
                <div className="bg-purple-100 text-purple-700 px-6 py-3 rounded-lg font-medium">
                  –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                </div>
              </div>
            ) : (
              <button
                onClick={() => handleUpgradeToPro('YEARLY')}
                className="w-full bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium"
              >
                –û–±–Ω–æ–≤–∏—Ç—å –¥–æ PRO - 4000‚ÇΩ/–≥–æ–¥
              </button>
            )}
          </div>
        </div>

        {/* FAQ */}
        <div className="bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          <div className="space-y-6">
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?</h3>
              <p className="text-gray-600">–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –ü–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã –≤—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ PRO —Ñ—É–Ω–∫—Ü–∏—è–º –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.</p>
            </div>
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –º–æ–∏–º–∏ —Ä—É–ª–µ—Ç–∫–∞–º–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–ª–∞–Ω?</h3>
              <p className="text-gray-600">–í—Å–µ –≤–∞—à–∏ —Ä—É–ª–µ—Ç–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è, –Ω–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–º–∫–∞—Ö –ª–∏–º–∏—Ç–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ (–¥–æ 3 —Ä—É–ª–µ—Ç–æ–∫).</p>
            </div>
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-2">–ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∞ –ø—Ä–∏ –≥–æ–¥–æ–≤–æ–π –æ–ø–ª–∞—Ç–µ?</h3>
              <p className="text-gray-600">–î–∞, –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≥–æ–¥–æ–≤–æ–≥–æ –ø–ª–∞–Ω–∞ –≤—ã —ç–∫–æ–Ω–æ–º–∏—Ç–µ 17% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 