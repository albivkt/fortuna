'use client';

import { useState, useEffect } from 'react';
import dynamic from 'next/dynamic';
import { DesignControls } from '@/components/DesignControls';

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è SSR –ø—Ä–æ–±–ª–µ–º
const Wheel = dynamic(
  () => import('react-custom-roulette').then((mod) => ({ default: mod.Wheel })),
  { 
    ssr: false,
    loading: () => (
      <div className="w-80 h-80 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center shadow-2xl">
        <span className="text-white font-bold text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä—É–ª–µ—Ç–∫–∏...</span>
      </div>
    )
  }
);

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä—É–ª–µ—Ç–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ react-custom-roulette
const wheelData = [
  { option: '–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞', style: { backgroundColor: '#EC4899', textColor: 'white' } },
  { option: '–ù–æ—É—Ç–±—É–∫', style: { backgroundColor: '#3B82F6', textColor: 'white' } },
  { option: '–§—É—Ç–±–æ–ª–∫–∞', style: { backgroundColor: '#EF4444', textColor: 'white' } },
  { option: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ', style: { backgroundColor: '#10B981', textColor: 'white' } },
  { option: '–ö–Ω–∏–≥–∞', style: { backgroundColor: '#F59E0B', textColor: 'white' } },
  { option: '–ì–∞–¥–∂–µ—Ç', style: { backgroundColor: '#8B5CF6', textColor: 'white' } },
  { option: '–ü—Ä–æ–∫–∞—á–∫–∞', style: { backgroundColor: '#06B6D4', textColor: 'white' } },
];

export default function Home() {
  const [mustSpin, setMustSpin] = useState(false);
  const [prizeNumber, setPrizeNumber] = useState(0);
  const [winner, setWinner] = useState<string | null>(null);
  const [isClient, setIsClient] = useState(false);
  const [showDesignPanel, setShowDesignPanel] = useState(false);
  const [customDesign, setCustomDesign] = useState({
    backgroundColor: 'transparent',
    borderColor: '#ffffff',
    textColor: '#ffffff'
  });

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞
  useEffect(() => {
    setIsClient(true);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞
    const savedDesign = localStorage.getItem('homePageDesign');
    if (savedDesign) {
      try {
        const parsedDesign = JSON.parse(savedDesign);
        setCustomDesign(parsedDesign);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–∏–∑–∞–π–Ω–∞:', error);
      }
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞ –ø—Ä–∏ –∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  useEffect(() => {
    if (isClient) {
      localStorage.setItem('homePageDesign', JSON.stringify(customDesign));
    }
  }, [customDesign, isClient]);

  const handleSpinClick = () => {
    if (!mustSpin) {
      const newPrizeNumber = Math.floor(Math.random() * wheelData.length);
      setPrizeNumber(newPrizeNumber);
      setMustSpin(true);
      setWinner(null);
    }
  };

  const handleStopSpinning = () => {
    setMustSpin(false);
    setWinner(wheelData[prizeNumber].option);
  };

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ä—É–ª–µ—Ç–∫–∏ —Å —É—á–µ—Ç–æ–º –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
  const customWheelData = wheelData.map(item => ({
    ...item,
    style: {
      ...item.style,
      textColor: customDesign.textColor
    }
  }));

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                <span className="text-white font-bold text-sm">G</span>
              </div>
              <span className="text-2xl font-bold text-gray-900">GIFTY</span>
            </div>
            <div className="flex space-x-4">
              <a href="/login" className="text-gray-600 hover:text-gray-900 px-4 py-2 rounded-lg transition-colors">
                –í—Ö–æ–¥
              </a>
              <a href="/register" className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </a>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="grid lg:grid-cols-2 gap-12 items-center">
            <div>
              <h1 className="text-5xl lg:text-6xl font-bold text-gray-900 mb-6">
                –°–æ–∑–¥–∞–≤–∞–π—Ç–µ
                <br />
                –∫–∞—Å—Ç–æ–º–Ω—ã–µ
                <br />
                <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
                  –∫–æ–ª—ë—Å–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
                </span>
              </h1>
              <p className="text-xl text-gray-600 mb-8 leading-relaxed">
                –ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —Ä—É–ª–µ—Ç–∫–∏ —Å –ø–æ–¥–∞—Ä–∫–∞–º–∏
                <br />
                –∏ –¥–µ–ª–∏—Ç–µ—Å—å –∏–º–∏ —Å –¥—Ä—É–∑—å—è–º–∏
              </p>
              <a 
                href="/register"
                className="bg-blue-600 text-white px-8 py-4 rounded-xl text-lg font-semibold hover:bg-blue-700 transition-all transform hover:scale-105 shadow-lg inline-block"
              >
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </a>
            </div>
            
            {/* React Custom Roulette Wheel */}
            <div className="flex flex-col items-center">
              <div className="relative">
                {/* Design Controls Button */}
                <button
                  onClick={() => setShowDesignPanel(!showDesignPanel)}
                  className="absolute -top-4 -right-4 z-10 bg-purple-600 text-white p-2 rounded-full hover:bg-purple-700 transition-colors shadow-lg"
                  title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4" />
                  </svg>
                </button>

                {/* Design Panel */}
                {showDesignPanel && (
                  <div className="absolute -top-4 -left-80 z-20 bg-white rounded-xl shadow-xl p-6 w-72 border">
                    <h3 className="text-lg font-semibold text-gray-900 mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞</h3>
                    <DesignControls
                      customDesign={customDesign}
                      setCustomDesign={setCustomDesign}
                      isPro={true}
                      showProMessage={false}
                    />
                  </div>
                )}

                <div 
                  className="p-4 rounded-xl transition-all duration-300"
                  style={{ backgroundColor: customDesign.backgroundColor }}
                >
                  {isClient ? (
                    <Wheel
                      mustStartSpinning={mustSpin}
                      prizeNumber={prizeNumber}
                      data={customWheelData}
                      onStopSpinning={handleStopSpinning}
                      backgroundColors={['#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6', '#06B6D4', '#EC4899']}
                      textColors={[customDesign.textColor]}
                      outerBorderColor={customDesign.borderColor}
                      outerBorderWidth={8}
                      innerBorderColor={customDesign.borderColor}
                      innerBorderWidth={4}
                      radiusLineColor={customDesign.borderColor}
                      radiusLineWidth={2}
                      fontSize={16}
                      textDistance={60}
                      spinDuration={0.8}
                    />
                  ) : (
                    <div className="w-80 h-80 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center shadow-2xl">
                      <span className="text-white font-bold text-lg">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä—É–ª–µ—Ç–∫–∏...</span>
                    </div>
                  )}
                </div>
              </div>
              
              {/* Spin Button */}
              <div className="mt-8">
                <button
                  className="bg-purple-600 text-white px-8 py-4 rounded-xl text-lg font-semibold hover:bg-purple-700 transition-all transform hover:scale-105 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed"
                  onClick={handleSpinClick}
                  disabled={mustSpin}
                >
                  {mustSpin ? '–ö—Ä—É—Ç–∏—Ç—Å—è...' : '–ö—Ä—É—Ç–∏—Ç—å –∫–æ–ª–µ—Å–æ!'}
                </button>
              </div>
              
              {/* Result Display */}
              {winner && (
                <div className="mt-6 p-4 bg-green-100 border-2 border-green-300 rounded-lg max-w-md">
                  <p className="text-green-800 font-bold text-lg text-center">
                    üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã–ø–∞–ª: <span className="text-green-600">{winner}</span>
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid md:grid-cols-3 gap-12">
            {/* Free Plan */}
            <div className="text-center">
              <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <svg className="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                </svg>
              </div>
              <h3 className="text-2xl font-bold text-gray-900 mb-4">
                –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π
                <br />
                –ø–ª–∞–Ω
              </h3>
              <ul className="text-gray-600 space-y-2 mb-6">
                <li>‚Ä¢ –î–æ 3 —Ä—É–ª–µ—Ç–æ–∫</li>
                <li>‚Ä¢ –î–æ 6 —Å–µ–≥–º–µ–Ω—Ç–æ–≤</li>
                <li>‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</li>
                <li>‚Ä¢ –ë–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</li>
              </ul>
              <p className="text-lg font-bold text-blue-600">
                –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
              </p>
            </div>

            {/* Pro Plan */}
            <div className="text-center relative">
              <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                <span className="bg-purple-500 text-white px-4 py-1 rounded-full text-sm font-medium">
                  –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                </span>
              </div>
              <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <svg className="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
              </div>
              <h3 className="text-2xl font-bold text-gray-900 mb-4">
                PRO
                <br />
                –ø–ª–∞–Ω
              </h3>
              <ul className="text-gray-600 space-y-2 mb-6">
                <li>‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä—É–ª–µ—Ç–æ–∫</li>
                <li>‚Ä¢ –î–æ 20 —Å–µ–≥–º–µ–Ω—Ç–æ–≤ + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</li>
                <li>‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∏–∑–∞–π–Ω–∞</li>
                <li>‚Ä¢ –í–µ—Å –ø—Ä–∏–∑–æ–≤, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</li>
              </ul>
              <div className="space-y-1">
                <p className="text-lg font-bold text-purple-600">
                  400‚ÇΩ/–º–µ—Å—è—Ü
                </p>
                <p className="text-sm text-gray-500">
                  –∏–ª–∏ 4000‚ÇΩ/–≥–æ–¥ (—Å–∫–∏–¥–∫–∞ 17%)
                </p>
              </div>
            </div>

            {/* Real-time */}
            <div className="text-center">
              <div className="w-16 h-16 bg-teal-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <svg className="w-8 h-8 text-teal-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
              </div>
              <h3 className="text-2xl font-bold text-gray-900 mb-4">
                –†–æ–∑—ã–≥—Ä—ã—à–∏
                <br />
                –≤ —Ä–µ–∞–ª—å–Ω–æ–º
                <br />
                –≤—Ä–µ–º–µ–Ω–∏
              </h3>
              <div className="text-gray-600 space-y-2">
                <p>–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
                <p>–°–æ–∑–¥–∞–π—Ç–µ –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-blue-600 to-purple-600">
        <div className="max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8">
          <h2 className="text-4xl font-bold text-white mb-6">
            –ì–æ—Ç–æ–≤—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—ë –∫–æ–ª–µ—Å–æ –ø–æ–¥–∞—Ä–∫–æ–≤?
          </h2>
          <p className="text-xl text-blue-100 mb-8">
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ —Å–æ–∑–¥–∞—é—Ç –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –º–æ–º–µ–Ω—Ç—ã
          </p>
          <a 
            href="/register"
            className="bg-white text-blue-600 px-8 py-4 rounded-xl text-lg font-semibold hover:bg-gray-100 transition-all transform hover:scale-105 shadow-lg inline-block"
          >
            –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
          </a>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center space-x-2 mb-4">
                <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                  <span className="text-white font-bold text-sm">G</span>
                </div>
                <span className="text-xl font-bold">GIFTY</span>
              </div>
              <p className="text-gray-400">
                –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–ª—ë—Å–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –¥–µ–ª–∏—Ç–µ—Å—å —Ä–∞–¥–æ—Å—Ç—å—é —Å –¥—Ä—É–∑—å—è–º–∏
              </p>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ü—Ä–æ–¥—É–∫—Ç</h4>
              <ul className="space-y-2 text-gray-400">
                <li><a href="#" className="hover:text-white transition-colors">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–¢–∞—Ä–∏—Ñ—ã</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ü—Ä–∏–º–µ—Ä—ã</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
              <ul className="space-y-2 text-gray-400">
                <li><a href="#" className="hover:text-white transition-colors">–ü–æ–º–æ—â—å</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                <li><a href="#" className="hover:text-white transition-colors">FAQ</a></li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold mb-4">–ö–æ–º–ø–∞–Ω–∏—è</h4>
              <ul className="space-y-2 text-gray-400">
                <li><a href="#" className="hover:text-white transition-colors">–û –Ω–∞—Å</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ë–ª–æ–≥</a></li>
                <li><a href="#" className="hover:text-white transition-colors">–ö–∞—Ä—å–µ—Ä–∞</a></li>
              </ul>
            </div>
          </div>
          <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
            <p>&copy; 2024 Gifty. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
}
