'use client';

import { useState } from 'react';
import ImageUpload from '@/components/ImageUpload';

export default function TestImageUploadSimplePage() {
  const [imageUrl, setImageUrl] = useState<string>('');
  const [status, setStatus] = useState<string>('');

  const handleImageSelect = (url: string) => {
    console.log('üñºÔ∏è ImageUpload callback called with:', url, 'type:', typeof url);
    setImageUrl(url);
    setStatus(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ: ${url}`);
  };

  return (
    <div className="container mx-auto p-8 max-w-2xl">
      <h1 className="text-3xl font-bold mb-8">–¢–µ—Å—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ImageUpload</h1>
      
      <div className="space-y-6">
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h2>
          
          <ImageUpload
            onImageSelect={handleImageSelect}
            currentImage={imageUrl || undefined}
          />
          
          {status && (
            <div className="mt-4 p-3 bg-green-100 border border-green-300 rounded text-green-700">
              {status}
            </div>
          )}
        </div>

        {imageUrl && (
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–†–µ–∑—É–ª—å—Ç–∞—Ç</h2>
            
            <div className="space-y-4">
              <div>
                <strong>URL:</strong>
                <div className="p-2 bg-gray-100 rounded mt-1 break-all text-sm">
                  {imageUrl}
                </div>
              </div>
              
              <div>
                <strong>–¢–∏–ø:</strong> {typeof imageUrl}
              </div>
              
              <div>
                <strong>–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:</strong>
                <div className="mt-2">
                  <img 
                    src={imageUrl} 
                    alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" 
                    className="w-32 h-32 object-cover border rounded"
                    onLoad={() => console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ')}
                    onError={(e) => console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', e)}
                  />
                </div>
              </div>
            </div>
          </div>
        )}

        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4 text-yellow-800">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h2>
          <ol className="list-decimal list-inside space-y-2 text-sm text-yellow-700">
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è S3 –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</li>
            <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ drag & drop –∏–ª–∏ –∫–Ω–æ–ø–∫—É</li>
            <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫</li>
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ callback –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É URL, –∞ –Ω–µ File –æ–±—ä–µ–∫—Ç</li>
          </ol>
        </div>

        <div className="bg-gray-100 rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-4">–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
          <div className="space-y-2 text-sm">
            <div><strong>Current imageUrl:</strong> {imageUrl || '–ù–µ –∑–∞–¥–∞–Ω'}</div>
            <div><strong>Type of imageUrl:</strong> {typeof imageUrl}</div>
            <div><strong>Is string:</strong> {typeof imageUrl === 'string' ? 'Yes' : 'No'}</div>
            <div><strong>Is valid URL:</strong> {imageUrl && imageUrl.startsWith('http') ? 'Yes' : 'No'}</div>
          </div>
        </div>
      </div>
    </div>
  );
} 