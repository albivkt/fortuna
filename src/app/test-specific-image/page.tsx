'use client';

import { useState, useEffect } from 'react';
import { CustomWheel } from '@/components/CustomWheel';

export default function TestSpecificImagePage() {
  const [logs, setLogs] = useState<string[]>([]);
  const [testResults, setTestResults] = useState<{
    direct: string;
    noCors: string;
    proxy: string;
  }>({
    direct: '–ù–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ',
    noCors: '–ù–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ', 
    proxy: '–ù–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ'
  });

  // –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –æ—à–∏–±–∫–∏
  const imageUrl = 'https://s3.twcstorage.ru/617774af-gifty/wheel-images/1750680655099-pk24bh.png';

  const addLog = (message: string) => {
    const timestamp = new Date().toLocaleTimeString();
    const logMessage = `[${timestamp}] ${message}`;
    console.log(logMessage);
    setLogs(prev => [...prev, logMessage]);
  };

  const clearLogs = () => {
    setLogs([]);
    console.clear();
  };

  // –¢–µ—Å—Ç –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å CORS
  const testDirectLoad = () => {
    addLog('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –∑–∞–≥—Ä—É–∑–∫—É —Å CORS...');
    
    const img = new Image();
    img.crossOrigin = 'anonymous';
    
    img.onload = () => {
      addLog(`‚úÖ –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å CORS —É—Å–ø–µ—à–Ω–∞: ${img.width}x${img.height}`);
      setTestResults(prev => ({ ...prev, direct: '‚úÖ –£—Å–ø–µ—Ö' }));
    };
    
    img.onerror = (error) => {
      addLog(`‚ùå –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å CORS –Ω–µ—É–¥–∞—á–Ω–∞`);
      console.error('Direct load error:', error);
      setTestResults(prev => ({ ...prev, direct: '‚ùå CORS –æ—à–∏–±–∫–∞' }));
    };
    
    img.src = imageUrl;
  };

  // –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –±–µ–∑ CORS
  const testNoCorsLoad = () => {
    addLog('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–µ–∑ CORS...');
    
    const img = new Image();
    // –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º crossOrigin
    
    img.onload = () => {
      addLog(`‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ CORS —É—Å–ø–µ—à–Ω–∞: ${img.width}x${img.height}`);
      addLog(`‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å (–Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ Canvas)`);
      setTestResults(prev => ({ ...prev, noCors: '‚úÖ –£—Å–ø–µ—Ö (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ)' }));
    };
    
    img.onerror = (error) => {
      addLog(`‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ CORS –Ω–µ—É–¥–∞—á–Ω–∞`);
      console.error('No CORS load error:', error);
      setTestResults(prev => ({ ...prev, noCors: '‚ùå –û—à–∏–±–∫–∞' }));
    };
    
    img.src = imageUrl;
  };

  // –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
  const testProxyLoad = () => {
    addLog('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ API...');
    
    const proxyUrl = `/api/proxy-image?url=${encodeURIComponent(imageUrl)}`;
    addLog(`üîó –ü—Ä–æ–∫—Å–∏ URL: ${proxyUrl}`);
    
    const img = new Image();
    img.crossOrigin = 'anonymous'; // –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å
    
    img.onload = () => {
      addLog(`‚úÖ –ü—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∑–∫–∞ —É—Å–ø–µ—à–Ω–∞: ${img.width}x${img.height}`);
      addLog(`üéâ –ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!`);
      setTestResults(prev => ({ ...prev, proxy: '‚úÖ –£—Å–ø–µ—Ö (–ø–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å)' }));
    };
    
    img.onerror = (error) => {
      addLog(`‚ùå –ü—Ä–æ–∫—Å–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ—É–¥–∞—á–Ω–∞`);
      console.error('Proxy load error:', error);
      setTestResults(prev => ({ ...prev, proxy: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏' }));
    };
    
    img.src = proxyUrl;
  };

  // –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ API –Ω–∞–ø—Ä—è–º—É—é
  const testProxyApi = async () => {
    addLog('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ API –Ω–∞–ø—Ä—è–º—É—é...');
    
    try {
      const proxyUrl = `/api/proxy-image?url=${encodeURIComponent(imageUrl)}`;
      const response = await fetch(proxyUrl);
      
      if (response.ok) {
        const contentType = response.headers.get('content-type');
        const blob = await response.blob();
        addLog(`‚úÖ –ü—Ä–æ–∫—Å–∏ API —Ä–∞–±–æ—Ç–∞–µ—Ç: ${contentType}, —Ä–∞–∑–º–µ—Ä: ${blob.size} –±–∞–π—Ç`);
        
        // –°–æ–∑–¥–∞–µ–º object URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        const objectUrl = URL.createObjectURL(blob);
        addLog(`üîó Object URL —Å–æ–∑–¥–∞–Ω: ${objectUrl.substring(0, 50)}...`);
        
        // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å
        setTimeout(() => URL.revokeObjectURL(objectUrl), 5000);
      } else {
        const errorData = await response.json();
        addLog(`‚ùå –ü—Ä–æ–∫—Å–∏ API –æ—à–∏–±–∫–∞: ${response.status} - ${errorData.error}`);
      }
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ø—Ä–æ–∫—Å–∏ API: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  // –¢–µ—Å—Ç –≤ CustomWheel
  const [wheelData, setWheelData] = useState([
    {
      option: '–¢–µ—Å—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      style: { backgroundColor: '#EC4899', textColor: 'white' },
      image: undefined as string | undefined,
      imagePosition: { x: 0, y: 0 }
    },
    {
      option: '–ë–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
      style: { backgroundColor: '#3B82F6', textColor: 'white' },
      image: undefined as string | undefined,
      imagePosition: { x: 0, y: 0 }
    }
  ]);

  const [mustSpin, setMustSpin] = useState(false);
  const [prizeNumber, setPrizeNumber] = useState(0);

  const testInWheel = () => {
    addLog('üé° –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ CustomWheel...');
    addLog('üì∫ –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ CustomWheel –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞');
    
    setWheelData(prev => prev.map((item, index) => 
      index === 0 ? { ...item, image: imageUrl } : item
    ));
  };

  const clearWheelImage = () => {
    addLog('üßπ –û—á–∏—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ä—É–ª–µ—Ç–∫–∏');
    setWheelData(prev => prev.map((item, index) => 
      index === 0 ? { ...item, image: undefined } : item
    ));
  };

  const runAllTests = () => {
    addLog('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ...');
    clearLogs();
    
    setTimeout(() => testDirectLoad(), 100);
    setTimeout(() => testNoCorsLoad(), 2000);
    setTimeout(() => testProxyLoad(), 4000);
    setTimeout(() => testProxyApi(), 6000);
  };

  const handleSpin = () => {
    if (!mustSpin) {
      const newPrizeNumber = Math.floor(Math.random() * wheelData.length);
      setPrizeNumber(newPrizeNumber);
      setMustSpin(true);
    }
  };

  const handleStopSpinning = () => {
    setMustSpin(false);
  };

  return (
    <div className="container mx-auto p-8 max-w-7xl">
      <h1 className="text-3xl font-bold mb-8 text-center">–¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h1>
      
      <div className="mb-6 p-4 bg-red-100 border border-red-400 rounded-lg">
        <h2 className="text-lg font-semibold mb-2 text-red-800">üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</h2>
        <p className="text-red-700 text-sm font-mono break-all">
          {imageUrl}
        </p>
        <p className="text-red-600 text-xs mt-2">
          –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–∏ CORS –≤ –≤–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ç–µ—Å—Ç—ã */}
        <div className="space-y-6">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–¢–µ—Å—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏</h2>
            
            <div className="space-y-3">
              <button
                onClick={runAllTests}
                className="w-full bg-purple-600 text-white py-3 px-4 rounded-lg hover:bg-purple-700 font-semibold"
              >
                üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã
              </button>
              
              <div className="border-t pt-3">
                <button
                  onClick={testDirectLoad}
                  className="w-full bg-red-500 text-white py-2 px-4 rounded-lg hover:bg-red-600 mb-2"
                >
                  1Ô∏è‚É£ –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ (—Å CORS)
                </button>
                
                <button
                  onClick={testNoCorsLoad}
                  className="w-full bg-orange-500 text-white py-2 px-4 rounded-lg hover:bg-orange-600 mb-2"
                >
                  2Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –±–µ–∑ CORS
                </button>
                
                <button
                  onClick={testProxyLoad}
                  className="w-full bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 mb-2"
                >
                  3Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
                </button>
                
                <button
                  onClick={testProxyApi}
                  className="w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600"
                >
                  üß™ –¢–µ—Å—Ç –ø—Ä–æ–∫—Å–∏ API
                </button>
              </div>
              
              <div className="border-t pt-3">
                <button
                  onClick={testInWheel}
                  className="w-full bg-indigo-500 text-white py-2 px-4 rounded-lg hover:bg-indigo-600 mb-2"
                >
                  üé° –¢–µ—Å—Ç –≤ CustomWheel
                </button>
                
                <button
                  onClick={clearWheelImage}
                  className="w-full bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600"
                >
                  üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏–∑ —Ä—É–ª–µ—Ç–∫–∏
                </button>
              </div>
              
              <button
                onClick={clearLogs}
                className="w-full bg-yellow-500 text-white py-2 px-4 rounded-lg hover:bg-yellow-600"
              >
                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏
              </button>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤</h2>
            
            <div className="space-y-3">
              <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
                <span className="font-medium">1Ô∏è‚É£ –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:</span>
                <span className="text-sm">{testResults.direct}</span>
              </div>
              
              <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
                <span className="font-medium">2Ô∏è‚É£ –ë–µ–∑ CORS:</span>
                <span className="text-sm">{testResults.noCors}</span>
              </div>
              
              <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
                <span className="font-medium">3Ô∏è‚É£ –ü—Ä–æ–∫—Å–∏:</span>
                <span className="text-sm">{testResults.proxy}</span>
              </div>
            </div>
          </div>
        </div>

        {/* –°—Ä–µ–¥–Ω—è—è –∫–æ–ª–æ–Ω–∫–∞ - —Ä—É–ª–µ—Ç–∫–∞ */}
        <div className="space-y-6">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4 text-center">–¢–µ—Å—Ç–æ–≤–∞—è —Ä—É–ª–µ—Ç–∫–∞</h2>
            <div className="flex justify-center">
              <CustomWheel
                mustStartSpinning={mustSpin}
                prizeNumber={prizeNumber}
                data={wheelData}
                onStopSpinning={handleStopSpinning}
                size="medium"
                isPro={true}
              />
            </div>
            
            <div className="text-center mt-4">
              <button
                onClick={handleSpin}
                disabled={mustSpin}
                className="bg-gradient-to-r from-orange-400 to-pink-400 text-white px-8 py-3 rounded-lg hover:from-orange-500 hover:to-pink-500 transition-all shadow-lg disabled:opacity-50"
              >
                {mustSpin ? '–ö—Ä—É—Ç–∏—Ç—Å—è...' : '–ö—Ä—É—Ç–∏—Ç—å!'}
              </button>
            </div>
          </div>

          {/* –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤ */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ–≥–º–µ–Ω—Ç–æ–≤</h2>
            
            <div className="space-y-3">
              {wheelData.map((segment, index) => (
                <div key={index} className="border rounded-lg p-3">
                  <div className="flex items-center space-x-3 mb-2">
                    <div
                      className="w-6 h-6 rounded-full border"
                      style={{ backgroundColor: segment.style.backgroundColor }}
                    />
                    <span className="font-medium">{segment.option}</span>
                  </div>
                  
                  <div className="text-sm">
                    <div><strong>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</strong> {segment.image ? '‚úÖ –ï—Å—Ç—å' : '‚ùå –ù–µ—Ç'}</div>
                    {segment.image && (
                      <div className="text-xs text-gray-600 break-all mt-1">
                        {segment.image.substring(0, 30)}...
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ª–æ–≥–∏ */}
        <div className="space-y-6">
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h2 className="text-xl font-semibold mb-4">–õ–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
            
            <div className="bg-gray-100 rounded-lg p-4 h-96 overflow-y-auto">
              {logs.length === 0 ? (
                <div className="text-gray-500 text-center">–õ–æ–≥–∏ –ø—É—Å—Ç—ã</div>
              ) : (
                <div className="space-y-1">
                  {logs.map((log, index) => (
                    <div key={index} className="text-xs font-mono">
                      {log}
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>

          {/* –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
          <div className="bg-green-50 border border-green-200 rounded-lg p-6">
            <h2 className="text-xl font-semibold mb-4 text-green-800">üéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h2>
            <div className="space-y-2 text-sm text-green-700">
              <div><strong>1Ô∏è‚É£ –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:</strong> ‚ùå CORS –æ—à–∏–±–∫–∞</div>
              <div><strong>2Ô∏è‚É£ –ë–µ–∑ CORS:</strong> ‚úÖ –£—Å–ø–µ—Ö (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ)</div>
              <div><strong>3Ô∏è‚É£ –ü—Ä–æ–∫—Å–∏:</strong> ‚úÖ –£—Å–ø–µ—Ö (–ø–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å)</div>
              <div><strong>CustomWheel:</strong> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ –ø—Ä–æ–∫—Å–∏</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 