warning: in the working copy of 'src/components/CustomWheel.tsx', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/src/components/CustomWheel.tsx b/src/components/CustomWheel.tsx[m
[1mindex 29dbed2..9bbd82c 100644[m
[1m--- a/src/components/CustomWheel.tsx[m
[1m+++ b/src/components/CustomWheel.tsx[m
[36m@@ -1,18 +1,4 @@[m
[31m-import React from 'react';[m
[31m-import dynamic from 'next/dynamic';[m
[31m-[m
[31m-// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è SSR –ø—Ä–æ–±–ª–µ–º[m
[31m-const Wheel = dynamic([m
[31m-  () => import('react-custom-roulette').then((mod) => ({ default: mod.Wheel })),[m
[31m-  { [m
[31m-    ssr: false,[m
[31m-    loading: () => ([m
[31m-      <div className="w-80 h-80 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center shadow-2xl">[m
[31m-        <span className="text-white font-bold text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä—É–ª–µ—Ç–∫–∏...</span>[m
[31m-      </div>[m
[31m-    )[m
[31m-  }[m
[31m-);[m
[32m+[m[32mimport React, { useRef, useEffect, useState, useMemo } from 'react';[m
 [m
 interface WheelData {[m
   option: string;[m
[36m@@ -20,24 +6,29 @@[m [minterface WheelData {[m
     backgroundColor: string;[m
     textColor: string;[m
   };[m
[32m+[m[32m  image?: string;[m
[32m+[m[32m  imagePosition?: { x: number; y: number }; // –ü–æ–∑–∏—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–µ–≥–º–µ–Ω—Ç–µ[m
 }[m
 [m
 interface CustomDesign {[m
   backgroundColor?: string;[m
   borderColor?: string;[m
   textColor?: string;[m
[32m+[m[32m  centerImage?: string;[m
 }[m
 [m
 interface CustomWheelProps {[m
   mustStartSpinning: boolean;[m
   prizeNumber: number;[m
   data: WheelData[];[m
[31m-  onStopSpinning: () => void;[m
[32m+[m[32m  onStopSpinning: (actualWinnerIndex?: number) => void;[m
   customDesign?: CustomDesign;[m
   isPro?: boolean;[m
   size?: 'small' | 'medium' | 'large';[m
   className?: string;[m
   containerClassName?: string;[m
[32m+[m[32m  onImagePositionChange?: (segmentIndex: number, position: { x: number; y: number }) => void;[m
[32m+[m[32m  isEditable?: boolean;[m
 }[m
 [m
 export function CustomWheel({[m
[36m@@ -49,59 +40,746 @@[m [mexport function CustomWheel({[m
   isPro = false,[m
   size = 'medium',[m
   className = '',[m
[31m-  containerClassName = ''[m
[32m+[m[32m  containerClassName = '',[m
[32m+[m[32m  onImagePositionChange,[m
[32m+[m[32m  isEditable = false[m
 }: CustomWheelProps) {[m
[31m-  const sizeConfig = {[m
[31m-    small: {[m
[31m-      outerBorderWidth: 4,[m
[31m-      innerBorderWidth: 2,[m
[31m-      radiusLineWidth: 1,[m
[31m-      fontSize: 10,[m
[31m-      textDistance: 35,[m
[31m-      spinDuration: 0.5[m
[31m-    },[m
[31m-    medium: {[m
[31m-      outerBorderWidth: 6,[m
[31m-      innerBorderWidth: 3,[m
[31m-      radiusLineWidth: 1,[m
[31m-      fontSize: 12,[m
[31m-      textDistance: 45,[m
[31m-      spinDuration: 0.5[m
[31m-    },[m
[31m-    large: {[m
[31m-      outerBorderWidth: 8,[m
[31m-      innerBorderWidth: 4,[m
[31m-      radiusLineWidth: 2,[m
[31m-      fontSize: 16,[m
[31m-      textDistance: 60,[m
[31m-      spinDuration: 0.8[m
[32m+[m[32m  const canvasRef = useRef<HTMLCanvasElement>(null);[m
[32m+[m[32m  const [isSpinning, setIsSpinning] = useState(false);[m
[32m+[m[32m  const [currentRotation, setCurrentRotation] = useState(0);[m
[32m+[m[32m  const [images, setImages] = useState<{ [key: number]: HTMLImageElement }>({});[m
[32m+[m[32m  const [centerImage, setCenterImage] = useState<HTMLImageElement | null>(null);[m
[32m+[m[32m  const [isDragging, setIsDragging] = useState(false);[m
[32m+[m[32m  const [dragSegment, setDragSegment] = useState<number>(-1);[m
[32m+[m[41m  [m
[32m+[m[32m  // Ref –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Ä—É–ª–µ—Ç–∫–∏[m
[32m+[m[32m  const finalRotationRef = useRef<number>(0);[m
[32m+[m
[32m+[m[32m  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Ä—É–ª–µ—Ç–∫–∏[m
[32m+[m[32m  const getWinnerFromRotation = (rotation: number, segmentsCount: number) => {[m
[32m+[m[32m    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —É–≥–æ–ª –∫ –¥–∏–∞–ø–∞–∑–æ–Ω—É [0, 2œÄ][m
[32m+[m[32m    const normalizedRotation = ((rotation % (Math.PI * 2)) + (Math.PI * 2)) % (Math.PI * 2);[m
[32m+[m[41m    [m
[32m+[m[32m    // –£–≥–æ–ª –Ω–∞ —Å–µ–≥–º–µ–Ω—Ç[m
[32m+[m[32m    const anglePerSegment = (Math.PI * 2) / segmentsCount;[m
[32m+[m[41m    [m
[32m+[m[32m    // –°—Ç—Ä–µ–ª–∫–∞ —É–∫–∞–∑—ã–≤–∞–µ—Ç –≤–≤–µ—Ä—Ö (—É–≥–æ–ª 3œÄ/2 –≤ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö)[m
[32m+[m[32m    const pointerAngle = (3 * Math.PI / 2);[m
[32m+[m[41m    [m
[32m+[m[32m    // –í—ã—á–∏—Å–ª—è–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π —É–≥–æ–ª –æ—Ç —Å—Ç—Ä–µ–ª–∫–∏[m
[32m+[m[32m    let relativeAngle = (pointerAngle - normalizedRotation + (Math.PI * 2)) % (Math.PI * 2);[m
[32m+[m[41m    [m
[32m+[m[32m    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–º–µ—Ä —Å–µ–≥–º–µ–Ω—Ç–∞[m
[32m+[m[32m    let segmentIndex = Math.floor(relativeAngle / anglePerSegment);[m
[32m+[m[41m    [m
[32m+[m[32m    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ –∫ –≥—Ä–∞–Ω–∏—Ü–µ —Å–µ–≥–º–µ–Ω—Ç–∞[m
[32m+[m[32m    const segmentProgress = (relativeAngle % anglePerSegment) / anglePerSegment;[m
[32m+[m[41m    [m
[32m+[m[32m    // –ï—Å–ª–∏ –º—ã –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–µ–≥–º–µ–Ω—Ç—É (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö 1% –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Å–µ–≥–º–µ–Ω—Ç–∞)[m
[32m+[m[32m    if (segmentProgress > 0.99) {[m
[32m+[m[32m      segmentIndex = (segmentIndex + 1) % segmentsCount;[m
[32m+[m[32m      console.log(`üéØ getWinnerFromRotation: –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–ª–∏ –Ω–∞ –≥—Ä–∞–Ω–∏—Ü–µ —Å–µ–≥–º–µ–Ω—Ç–∞`);[m
     }[m
[32m+[m[41m    [m
[32m+[m[32m    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∏–Ω–¥–µ–∫—Å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ[m
[32m+[m[32m    segmentIndex = Math.max(0, Math.min(segmentIndex, segmentsCount - 1));[m
[32m+[m[41m    [m
[32m+[m[32m    console.log(`üéØ getWinnerFromRotation: rotation=${rotation.toFixed(4)}, normalized=${normalizedRotation.toFixed(4)}, relativeAngle=${relativeAngle.toFixed(4)}, segmentProgress=${segmentProgress.toFixed(4)}, segmentIndex=${segmentIndex}`);[m
[32m+[m[41m    [m
[32m+[m[32m    return segmentIndex;[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    if (finalRotationRef.current !== 0 && !isSpinning) {[m
[32m+[m[32m      console.log('üîÑ CustomWheel: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é:', finalRotationRef.current);[m
[32m+[m[32m      setCurrentRotation(finalRotationRef.current);[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [data, isSpinning]);[m
[32m+[m
[32m+[m[32m  const sizeConfig = {[m
[32m+[m[32m    small: { radius: 120, fontSize: 11, textDistance: 80 },[m
[32m+[m[32m    medium: { radius: 160, fontSize: 13, textDistance: 100 },[m
[32m+[m[32m    large: { radius: 200, fontSize: 15, textDistance: 130 }[m
   };[m
 [m
   const config = sizeConfig[size];[m
   const backgroundColor = isPro && customDesign?.backgroundColor ? customDesign.backgroundColor : 'transparent';[m
   const borderColor = isPro && customDesign?.borderColor ? customDesign.borderColor : '#ffffff';[m
 [m
[32m+[m[32m  // –°—Ç–∞–±–∏–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è useEffect[m
[32m+[m[32m  const renderDeps = useMemo(() => {[m
[32m+[m[32m    const deps = {[m
[32m+[m[32m      data,[m
[32m+[m[32m      currentRotation,[m
[32m+[m[32m      images,[m
[32m+[m[32m      config,[m
[32m+[m[32m      borderColor,[m
[32m+[m[32m      isPro: Boolean(isPro),[m
[32m+[m[32m      centerImage: centerImage || null[m
[32m+[m[32m    };[m
[32m+[m[41m    [m
[32m